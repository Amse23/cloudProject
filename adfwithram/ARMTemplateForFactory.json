{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfwithram"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"AzureTableStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorage1'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://amseproject.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_tbl_to_sqldb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "non-relational to relational",
						"description": "This pipeline convert non-relational data to relational to prepare data for the masking",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PartitionKey",
											"type": "String"
										},
										"sink": {
											"name": "PartitionKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RowKey",
											"type": "String"
										},
										"sink": {
											"name": "RowKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Timestamp",
											"type": "DateTimeOffset"
										},
										"sink": {
											"name": "Timestamp",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "customerId",
											"type": "String"
										},
										"sink": {
											"name": "customerId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "dob",
											"type": "String"
										},
										"sink": {
											"name": "dob",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "firstName",
											"type": "String"
										},
										"sink": {
											"name": "firstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastName",
											"type": "String"
										},
										"sink": {
											"name": "lastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "phone",
											"type": "String"
										},
										"sink": {
											"name": "phone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ssn",
											"type": "String"
										},
										"sink": {
											"name": "ssn",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "state",
											"type": "String"
										},
										"sink": {
											"name": "state",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "street",
											"type": "String"
										},
										"sink": {
											"name": "street",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "zipCode",
											"type": "String"
										},
										"sink": {
											"name": "zipCode",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_tableStorage",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-02-20T13:10:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_tableStorage')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_df_mask')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow for masking",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_mask",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Source": {},
									"SinkMaskedColumns": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-02-20T12:46:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_mask')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PartitionKey",
						"type": "varchar"
					},
					{
						"name": "RowKey",
						"type": "varchar"
					},
					{
						"name": "Timestamp",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "customerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dob",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "firstName",
						"type": "varchar"
					},
					{
						"name": "lastName",
						"type": "varchar"
					},
					{
						"name": "phone",
						"type": "varchar"
					},
					{
						"name": "ssn",
						"type": "varchar"
					},
					{
						"name": "state",
						"type": "varchar"
					},
					{
						"name": "street",
						"type": "varchar"
					},
					{
						"name": "zipCode",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "MaskedData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_tableStorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureTableStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureTable",
				"schema": [],
				"typeProperties": {
					"tableName": "CustomerTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureTableStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTableStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_mask')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_sql",
								"type": "DatasetReference"
							},
							"name": "Source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql",
								"type": "DatasetReference"
							},
							"name": "SinkMaskedColumns"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PartitionKey as string,",
						"          RowKey as string,",
						"          Timestamp as string,",
						"          City as string,",
						"          customerId as integer,",
						"          dob as string,",
						"          email as string,",
						"          firstName as string,",
						"          lastName as string,",
						"          phone as string,",
						"          ssn as string,",
						"          state as string,",
						"          street as string,",
						"          zipCode as decimal(18,0)",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Source",
						"Source derive(ssn = sha2(256,ssn),",
						"          email = sha2(256,email)) ~> derivedColumn1",
						"derivedColumn1 alterRow(updateIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          PartitionKey as string,",
						"          RowKey as string,",
						"          Timestamp as string,",
						"          City as string,",
						"          customerId as integer,",
						"          dob as string,",
						"          email as string,",
						"          firstName as string,",
						"          lastName as string,",
						"          phone as string,",
						"          ssn as string,",
						"          state as string,",
						"          street as string,",
						"          zipCode as decimal(18,0)",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['PartitionKey'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SinkMaskedColumns"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sql')]"
			]
		}
	]
}